# Workflow Qualit√©
name: Quality Analysis

on:
  workflow_run:
    workflows:
      - Tests Pipeline
    types:
      - completed

jobs:
  quality_analysis_backend:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Ensure jacoco.xml Directory Exists
        run: mkdir -p back/target/site/jacoco

      - name: Download jacoco.xml Artifact
        uses: actions/download-artifact@v3
        with:
          name: jacoco-report
          path: back/target/site/jacoco
      
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'zulu'

      - name: Build Backend for SonarQube
        run: |
          cd back
          mvn clean compile

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: ./back

  quality_analysis_frontend:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Ensure lcov-report Directory Exists
        run: mkdir -p front/coverage/bobapp

      - name: Download Coverage Artifacts
        uses: actions/download-artifact@v3
        with:
          name: frontend-coverage
          path: front/coverage/bobapp


      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22.x

      - name: Install Frontend Dependencies
        run: |
          cd front
          npm install
      
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: ./front
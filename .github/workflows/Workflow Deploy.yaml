# Workflow Deploy
name: Deploy Pipeline

on:
  push:
    branches:
      - main

jobs:
  backend_build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build Backend
        run: |
          cd back
          mvn clean compile

      - name: Verify Compilation Output
        run: ls -la back/target/classes

      - name: Build Docker image for Backend
        run: |
          cd back
          docker build -t bobapp-back:latest .

      - name: Save Backend Docker image as artifact
        run: docker save bobapp-back:latest | gzip > bobapp-back.tar.gz
      - uses: actions/upload-artifact@v4
        with:
          name: bobapp-back
          path: bobapp-back.tar.gz

  frontend_build:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies for ChromeHeadless
        run: |
          sudo apt-get update
          sudo apt-get install -y libnss3 libatk1.0-0 libx11-xcb1 libxcomposite1 libxcursor1 libxdamage1 libxrandr2 libxss1 libxtst6 fonts-liberation libappindicator3-1 libasound2 libgbm1

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'latest'

      - name: Install dependencies for Frontend
        run: |
          cd front
          npm install

      - name: Build Frontend
        run: |
          cd front
          npm run build

      - name: Build Docker image for Frontend
        run: |
          cd front
          docker build -t bobapp-front:latest .

      - name: Save Frontend Docker image as artifact
        run: docker save bobapp-front:latest | gzip > bobapp-front.tar.gz
      - uses: actions/upload-artifact@v4
        with:
          name: bobapp-front
          path: bobapp-front.tar.gz

  deploy:
    runs-on: ubuntu-latest
    needs: [backend_build, frontend_build]
    steps:
      - name: Download Backend Docker image artifact
        uses: actions/download-artifact@v3
        with:
          name: bobapp-back
      - name: Load Backend Docker image
        run: gunzip -c bobapp-back.tar.gz | docker load

      - name: Download Frontend Docker image artifact
        uses: actions/download-artifact@v3
        with:
          name: bobapp-front
      - name: Load Frontend Docker image
        run: gunzip -c bobapp-front.tar.gz | docker load
  
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Tag and Push Backend Docker image
        run: |
          docker tag bobapp-back:latest ${{ secrets.DOCKER_USERNAME }}/bobapp-back:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/bobapp-back:latest

      - name: Tag and Push Frontend Docker image
        run: |
          docker tag bobapp-front:latest ${{ secrets.DOCKER_USERNAME }}/bobapp-front:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/bobapp-front:latest
